{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GigoQuan\\\\OneDrive\\\\Desktop\\\\Udacity_AWS\\\\React\\\\final_project_review\\\\udacity_React_final\\\\src\\\\component\\\\HomePage.js\",\n  _s = $RefreshSig$();\nimport { connect } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { handleInitialData } from \"../actions/shared\";\nimport { formatDate } from \"../utils/helpers\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Fragment } from \"react\";\nimport Nav from \"./Nav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = props => {\n  _s();\n  const navigate = useNavigate();\n  const [isToggleNewQuestion, setIsToggleNewQuestion] = useState(true);\n  const toggleChange = () => {\n    setIsToggleNewQuestion(!isToggleNewQuestion);\n    if (isToggleNewQuestion) {}\n  };\n  useEffect(() => {\n    props.dispatch(handleInitialData());\n  }, []);\n  let answerList = Object.keys(props.users[props.authedUser].answers);\n  const resultFilter = {\n    unanswerList: Object.values(props.questions).filter(questions => !answerList.includes(questions.id)),\n    answerList: Object.values(props.questions).filter(questions => answerList.includes(questions.id))\n  };\n  const showDetailPoll = (e, id) => {\n    e.preventDefault();\n    navigate(`/poll/${id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Choose question categories \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        value: true,\n        name: \"newQuestion\",\n        checked: isToggleNewQuestion,\n        onChange: toggleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"New question \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"radio\",\n        value: false,\n        name: \"Done\",\n        checked: !isToggleNewQuestion,\n        onChange: toggleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Done \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: isToggleNewQuestion ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"New Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: resultFilter.unanswerList.sort((a, b) => b.timestamp.valueOf() - a.timestamp.valueOf()).map(que => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [que.author, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 53\n            }, this), formatDate(que.timestamp), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 68\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => showDetailPoll(e, que.id),\n              children: \"Show\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 41\n            }, this)]\n          }, que.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: resultFilter.answerList.sort((a, b) => b.timestamp.valueOf() - a.timestamp.valueOf()).map(que => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [que.author, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 49\n            }, this), formatDate(que.timestamp), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 64\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => showDetailPoll(e, que.id),\n              children: \"Show\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 37\n            }, this)]\n          }, que.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(HomePage, \"TxEO8nrZ2ZUSRbXkc8HQfO5nrFo=\", false, function () {\n  return [useNavigate];\n});\n_c = HomePage;\nfunction mapStateToProps(state) {\n  const {\n    users,\n    questions,\n    authedUser\n  } = state;\n  return {\n    users,\n    questions,\n    authedUser\n  };\n}\nexport default connect(mapStateToProps)(HomePage);\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["connect","useEffect","useState","handleInitialData","formatDate","useNavigate","Fragment","Nav","jsxDEV","_jsxDEV","HomePage","props","_s","navigate","isToggleNewQuestion","setIsToggleNewQuestion","toggleChange","dispatch","answerList","Object","keys","users","authedUser","answers","resultFilter","unanswerList","values","questions","filter","includes","id","showDetailPoll","e","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","name","checked","onChange","sort","a","b","timestamp","valueOf","map","que","author","onClick","_c","mapStateToProps","state","$RefreshReg$"],"sources":["C:/Users/GigoQuan/OneDrive/Desktop/Udacity_AWS/React/final_project_review/udacity_React_final/src/component/HomePage.js"],"sourcesContent":["\r\nimport { connect } from \"react-redux\";\r\nimport { useEffect, useState  } from \"react\";\r\nimport { handleInitialData } from \"../actions/shared\"\r\nimport {formatDate} from \"../utils/helpers\"\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {Fragment } from \"react\";\r\nimport Nav from \"./Nav\";\r\n\r\nconst HomePage = (props) => {\r\n    const navigate = useNavigate();\r\n    const [isToggleNewQuestion, setIsToggleNewQuestion] = useState(true);\r\n\r\n    const toggleChange = ()=>{\r\n        setIsToggleNewQuestion(!isToggleNewQuestion)\r\n        if (isToggleNewQuestion) {\r\n\r\n        }\r\n      }\r\n\r\n    useEffect(() => {\r\n        props.dispatch(handleInitialData());\r\n      }, []);\r\n\r\n      let answerList = Object.keys(props.users[props.authedUser].answers);\r\n\r\n      const resultFilter = {\r\n        unanswerList:  Object.values(props.questions).filter(questions => !answerList.includes(questions.id)),\r\n        answerList:  Object.values(props.questions).filter(questions => answerList.includes(questions.id)),\r\n      };\r\n\r\n    const showDetailPoll = (e, id) => {\r\n        e.preventDefault();\r\n        navigate(`/poll/${id}`);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <Nav></Nav>\r\n\r\n            <h1>Choose question categories </h1>\r\n            <div>\r\n            <input\r\n                type=\"radio\"\r\n                value={true}\r\n                name=\"newQuestion\"\r\n                checked={isToggleNewQuestion}\r\n                onChange={toggleChange}\r\n            />\r\n            <label>New question </label>\r\n            <input\r\n                type=\"radio\"\r\n                value={false}\r\n                name=\"Done\"\r\n                checked={!isToggleNewQuestion}\r\n                onChange={toggleChange}\r\n            />\r\n            <label>Done </label>\r\n            </div>\r\n\r\n            <div>\r\n                {\r\n                    isToggleNewQuestion ? (\r\n                        <div>\r\n                            <h3>New Questions</h3>\r\n                            <ul>\r\n                            {resultFilter.unanswerList.sort((a,b) => b.timestamp.valueOf() - a.timestamp.valueOf()).map((que) => (\r\n                                    <li key={que.id}>\r\n                                        {que.author}<br />\r\n                                        {formatDate(que.timestamp)}<br />\r\n                                        <button onClick={(e) => showDetailPoll(e, que.id)}>Show</button>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    ) : \r\n                    (\r\n                        <div>\r\n                            <h3>Done</h3>\r\n                            <ul>\r\n                            {resultFilter.answerList.sort((a,b) => b.timestamp.valueOf() - a.timestamp.valueOf()).map((que) => (\r\n                                    <li key={que.id}>\r\n                                    {que.author}<br />\r\n                                    {formatDate(que.timestamp)}<br />\r\n                                    <button onClick={(e) => showDetailPoll(e, que.id)}>Show</button>\r\n                                </li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    )\r\n                }\r\n                    </div>\r\n            </Fragment>\r\n    );\r\n};\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n    const { users, questions, authedUser } = state;\r\n    return { users,\r\n             questions,\r\n             authedUser, }\r\n} \r\n\r\nexport default connect(mapStateToProps)(HomePage);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}